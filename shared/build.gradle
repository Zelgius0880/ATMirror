apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 27
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation project(path: ':utils')
    implementation project(path: ':lights')


    //KTX & coroutines
    def lifecycle_version = '2.2.0'
    api 'androidx.core:core-ktx:1.2.0'
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'

    // ViewModel and LiveData
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation 'com.google.firebase:firebase-firestore:21.4.1'
    kapt "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    annotationProcessor "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // For Kotlin use kapt instead of annotationProcessor
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"


    // Tests
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "org.mockito:mockito-core:2.19.0"
    testImplementation "org.mockito:mockito-core:2.19.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"


    //Paging Library
    def paging_version = "2.1.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"


    // alternatively - without Android dependencies for testing
    testImplementation "androidx.paging:paging-common:$paging_version"
    // For Kotlin use paging-common-ktx
}
